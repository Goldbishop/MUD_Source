This is DikuMud alfa updated for newer systems.  The functionality is the 
same and maybe even the bugs.  Hopfully I didn't introduce any new ones.

This release was compiled and tested on the following platforms:

* Microsoft Windows XP Service Pack 2 
  CYGWIN_NT-5.1 1.5.18(0.132/4/2) using gcc 3.4.4 (cygming special)
  CYGWIN_NT-5.1 1.5.12(0.116/4/2) using gcc 3.3.3 (cygming special)
  Borland C++ 5.5.1 for Win32 (free compiler release)
  Borland C++ 5.3 for Win32 (Builder v3.0)
  Digital Mars C/C++ Compiler Version 8.40.2n
  Microsoft Visual C/C++ v7.1 (Visual C++ Toolkit 2003)
  Microsoft Visual C/C++ v6.0
  Logiciels/Informatique lcc-win32 version 3.8 

* Microsoft Windows 98 SE 
  CYGWIN_98-4.10 1.5.12(0.116/4/2) using gcc 3.3.3 (cygwin special)

* Red Hat Linux release 6.2 (Zoot) Kernel 2.2.14-5.0 on an i486 with 
  gcc version egcs-2.91.66 19990314/Linux (egcs-1.1.2 release)

* FreeBSD 5.3-BETA4 
  gcc version 3.4.2 [FreeBSD] 20040728

* Gentoo Linux 2.6.9-gentoo-r9 
  gcc version 3.3.4 20040623 (Gentoo Linux 3.3.4-r1, ssp-3.3.2-2, pie-8.7.6)

* Debian Linux 2.6.8-1-38  
  gcc version 3.3.5 (Debian 1:3.3.5=5)

* SuSE Linux 2.6.4-52-default
  gcc version 3.3.3 (SuSE Linux)
  
---------------------------------------------------------------------------------

Installation

  * For Linux and Cygwin - type 'make'.   

  * For FreeBSD - type 'gmake'.
  
  * For Windows using Borland - ensure the Borland compiler bin directory 
    is in your path, then type 'make -f makefile.bor'.
    - All executables will be linked with the RTL and without debugging symbols.
      To link a static executable   -   use 'make -f makefile.bor -DSTATIC'.
      To include debugging symbols  -   use 'make -f makefile.bor -DDEBUG'.
      Or for both                   -   use 'make -f makefile.bor -DDEBUG -DSTATIC'.

  * For Windows using Digital Mars - ensure the Digital Mars bin directory 
    is in your path, then type 'make -f makefile.dgm'.

  * For Windows using Microsoft Visual C - ensure your Visual C bin directory
    is in your path and your INCLUDE and LIBS environment variables are setup
    correctly.
    - With Visual C++ 6.0 you may need to run the vcvars32.bat file.
    - With Visual C++ Toolkit 2003 and Platform SDK you may need to use both the
      setenv.cmd and vsvars32.bat
    Then type 'nmake -f makefile.vc'
    - To link with debugging information type 'set DEBUG=1' and then use
      'nmake -f makefile.vc'

  * For Windows using LCC - ensure the LCC bin directory is in your path, 
    then type 'make -f makefile.lcc'.  

Read the readme file and files in the doc directory on how to use it.  

Note that some of the utilities have problems.  The delplay utility on
Windows needs some fixing to work.  The nightrun script does work
correctly on linuxes but you'd probably want to modify it.

This code and my changes are released under the original conditions of
the Dikimud license which are found in doc/license.doc.

Enjoy.

Jon Lambert - aka Tyche
jlsysinc@alltel.net
